services:
  app:
    build: ./app
    container_name: web-app  
    hostname: web-app
    volumes: ['./app/src:/appcode']
    ports:
      - 8501:8501

  db:
    image: mysql:latest
    container_name: algonauts_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}  # Root password for MySQL
      MYSQL_DATABASE: ${MYSQL_DATABASE}          # Database name to auto-create
      MYSQL_USER: ${MYSQL_USER}                  # User to auto-create
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}          # Password for the created user
    ports:
      - "3306:3306"                              # Map port 3306 on the host to 3306 in the container
    volumes:
      - ./db:/docker-entrypoint-initdb.d         # Mount the ./db folder for initialization scripts
    restart: always                              # Ensure the service restarts automatically
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]  # Check MySQL status
      interval: 10s                              # Run the health check every 10 seconds
      retries: 3                                 # Retry 3 times before considering the container as unhealthy
      start_period: 5s                           # Wait 5 seconds before starting the health check
      timeout: 5s                                # Timeout after 5 seconds if no response



  api:
    build:
      context: ./api
    container_name: web-api
    environment:
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - ./api:/apicode
    ports:
      - "4000:4000"
    depends_on:
      - db
